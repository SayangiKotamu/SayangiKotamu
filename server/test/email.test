const request = require("supertest");
const app = require("../app");
jest.mock("nodemailer");
const nodemailer = require("nodemailer");

const sendMailMock = jest.fn().mockReturnValue("success");
nodemailer.createTransport.mockReturnValue({ sendMail: sendMailMock });

let userTestData = {
  NIK: 1501111709990002,
  fullname: "test",
  email: "testing@gmail.com",
  password: "123456",
  kota: "jakarta",
  ktp: "google.com",
};

beforeAll((done) => {
  sendMailMock.mockClear();
  nodemailer.createTransport.mockClear();
  done();
});

// ERROR NODMAILER
describe("POST /register [SUCCESS FAILED]", () => {
  jest.setTimeout(10000);
  test("should return an object with key: NIK,fullname, email, kota, ktp", (done) => {
    request(app)
      .post("/register")
      .send(userTestData)
      .then((response) => {
        expect(response.status).toBe(201);
        done();
      })
      .catch((err) => {
        done(err);
      });
  });
});
